.TH MPI_Win_shared_query 3 "11/8/2022" " " "MPI"
.SH NAME
MPI_Win_shared_query \-  Query the size and base pointer for a patch of a shared memory window 
.SH SYNOPSIS
.nf
int MPI_Win_shared_query(MPI_Win win, int rank, MPI_Aint *size, int *disp_unit, void *baseptr)
.fi
.SH INPUT PARAMETERS
.PD 0
.TP
.B win 
- shared memory window object (handle)
.PD 1
.PD 0
.TP
.B rank 
- rank in the group of window win or MPI_PROC_NULL (non-negative integer)
.PD 1

.SH OUTPUT PARAMETERS
.PD 0
.TP
.B size 
- size of the window segment (non-negative integer)
.PD 1
.PD 0
.TP
.B disp_unit 
- local unit size for displacements, in bytes (positive integer)
.PD 1
.PD 0
.TP
.B baseptr 
- address for load/store access to window segment (choice)
.PD 1

.SH NOTES
The returned baseptr points to the calling process
.I  address space of the
shared segment belonging to the target rank.

.SH THREAD AND INTERRUPT SAFETY

This routine is thread-safe.  This means that this routine may be
safely used by multiple threads without the need for any user-provided
thread locks.  However, the routine is not interrupt safe.  Typically,
this is due to the use of memory allocation routines such as 
malloc
.I or other non-MPICH runtime routines that are themselves not interrupt-safe.

.SH NOTES FOR FORTRAN
All MPI routines in Fortran (except for 
MPI_WTIME
.I  and 
MPI_WTICK
.I ) have
an additional argument 
ierr
.I  at the end of the argument list.  
ierr
.I is an integer and has the same meaning as the return value of the routine
in C.  In Fortran, MPI routines are subroutines, and are invoked with the
call
.I  statement.

All MPI objects (e.g., 
MPI_Datatype
.I , 
MPI_Comm
.I ) are of type 
INTEGER
.I in Fortran.

.SH ERRORS

All MPI routines (except 
MPI_Wtime
.I  and 
MPI_Wtick
.I ) return an error value;
C routines as the value of the function and Fortran routines in the last
argument.  Before the value is returned, the current MPI error handler is
called.  By default, this error handler aborts the MPI job.  The error handler
may be changed with 
MPI_Comm_set_errhandler
.I  (for communicators),
MPI_File_set_errhandler
.I  (for files), and 
MPI_Win_set_errhandler
.I  (for
RMA windows).  The MPI-1 routine 
MPI_Errhandler_set
.I  may be used but
its use is deprecated.  The predefined error handler
MPI_ERRORS_RETURN
.I  may be used to cause error values to be returned.
Note that MPI does 
.B not
guarantee that an MPI program can continue past
an error; however, MPI implementations will attempt to continue whenever
possible.

.PD 0
.TP
.B MPI_SUCCESS 
- No error; MPI routine completed successfully.
.PD 1

.PD 0
.TP
.B MPI_ERR_ARG 
- Invalid argument.  Some argument is invalid and is not
identified by a specific error class (e.g., 
MPI_ERR_RANK
.I ).
.PD 1
.PD 0
.TP
.B MPI_ERR_RANK 
- Invalid source or destination rank.  Ranks must be between
zero and the size of the communicator minus one; ranks in a receive
(
MPI_Recv
.I , 
MPI_Irecv
.I , 
MPI_Sendrecv
.I , etc.) may also be 
MPI_ANY_SOURCE
.I .
.PD 1
.PD 0
.TP
.B MPI_ERR_WIN 
- Invalid MPI window object
.PD 1
.PD 0
.TP
.B MPI_ERR_OTHER 
- Other error; use 
MPI_Error_string
.I  to get more information
about this error code. 
.PD 1

.SH SEE ALSO
MPI_Win_allocate_shared
.br
